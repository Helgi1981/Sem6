// Необходимо разделить логику алгоритмов на функции.

// 1. Задайте произвольную строку. 
// 2. Выясните, является ли она палиндромом.

// Пример:
// “aBcD1ef!-” => Нет
// “шалаш” => Да
// “55655” => Да

string IsPalindrome(string input)
{
    string cleanedInput = CleanString(input);
    bool isPalindrome = CheckPalindrome(cleanedInput);
    return isPalindrome ? "Да" : "Нет";
}

string CleanString(string input)
{
    // Удаление всех символов, кроме букв и цифр, и приведение к нижнему регистру
    return new string(input.Where(char.IsLetterOrDigit).Select(char.ToLower).ToArray());
}

bool CheckPalindrome(string input)
{
    int left = 0;
    int right = input.Length - 1;

    while (left < right)
    {
        if (input[left] != input[right])
        {
            return false;
        }
        left++;
        right--;
    }

    return true;
}

string input1 = "aBcD1ef!-";
string input2 = "шалаш";
string input3 = "55655";
string input4 = "недотрога";

Console.WriteLine($"{input1} => {IsPalindrome(input1)}");
Console.WriteLine($"{input2} => {IsPalindrome(input2)}");
Console.WriteLine($"{input3} => {IsPalindrome(input3)}");
Console.WriteLine($"{input4} => {IsPalindrome(input4)}");


// Эта программа выполняет следующие шаги:

// IsPalindrome: Очищает строку от лишних символов и проверяет, является ли она палиндромом.
// CleanString: Удаляет все символы, кроме букв и цифр, и приводит строку к нижнему регистру.
// CheckPalindrome: Проверяет, является ли строка палиндромом, сравнивая символы с двух концов к середине.
// Main: Задает несколько строк и вызывает функцию IsPalindrome для каждой строки, выводя результат.

// Метод IsPalindrome

// Описание:
// Метод IsPalindrome принимает строку в качестве аргумента, очищает её от лишних символов (все кроме букв и цифр) 
// и приводит к нижнему регистру. Затем он проверяет является ли полученная строка палиндромом и возвращает
// результат в виде строки "Да" или "Нет".

// Детальное описание

// Входной параметр:
// input(string): Исходная строка, которую нужно проверить на палиндром.

// Шаг 1: Очистка строки
// Вызывает метод CleanString(input), чтобы удалить все не буквенно-цифровые символы и привести строку к 
// нижнему регистру. Результат сохраняется в переменную cleanedInput.

// Шаг 2: Проверка на палиндром
// Вызывает метод CheckPalindrome(cleanedInput), чтобы проверить, является ли очищенная строка палиндромом. 
// Результат сохраняется в переменную isPalindrome.

// Шаг 3: Возврат результата
// Возвращает строку "Да", если строка является палиндромом (isPalindrome равно true), и "Нет" в противном случае.


// Метод CleanString

// Описание:
// Метод CleanString принимает строку, удаляет из неё все символы, кроме букв и цифр, и приводит все оставшиеся 
// символы к нижнему регистру.

// Детальное описание

// Входной параметр:
// input (string): Исходная строка, которую нужно очистить.

// Шаг 1: Фильтрация символов
// Использует метод Where из LINQ для фильтрации символов. char.IsLetterOrDigit пропускает только буквы и цифры.

// Шаг 2: Приведение к нижнему регистру
// Применяет метод Select для каждого символа, чтобы привести его к нижнему регистру с помощью char.ToLower.

// Шаг 3: Преобразование в строку
// Преобразует результирующий набор символов обратно в строку с помощью new string(...).

// Шаг 4: Возврат результата
// Возвращает очищенную строку.